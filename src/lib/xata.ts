// Generated by Xata Codegen 0.23.2. Please do not edit.
import { buildClient, buildWorkerRunner } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "notes",
    columns: [
      { name: "title", type: "string", notNull: true, defaultValue: "" },
      {
        name: "description",
        type: "string",
        notNull: true,
        defaultValue: '""',
      },
      { name: "slug", type: "string", notNull: true, defaultValue: '""' },
      { name: "markdown", type: "text", notNull: true, defaultValue: "" },
      { name: "body", type: "text", notNull: true, defaultValue: '""' },
      { name: "created_at", type: "string", notNull: true, defaultValue: '""' },
      { name: "author", type: "link", link: { table: "users" } },
      { name: "rating", type: "int", notNull: true, defaultValue: "1" },
      { name: "is_draft", type: "bool", notNull: true, defaultValue: "false" },
    ],
  },
  {
    name: "users",
    columns: [
      { name: "name", type: "string", unique: true },
      { name: "email", type: "email", unique: true },
      { name: "avatar_url", type: "string", notNull: true, defaultValue: '""' },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Notes = InferredTypes["notes"];
export type NotesRecord = Notes & XataRecord;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type DatabaseSchema = {
  notes: NotesRecord;
  users: UsersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://aman-codespace-4l60en.eu-west-1.xata.sh/db/notes",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};

export const xataWorker = buildWorkerRunner<XataClient>({
  workspace: "aman-codespace-4l60en",
  worker: "cgf7f7unhi1ncsutis10",
});
